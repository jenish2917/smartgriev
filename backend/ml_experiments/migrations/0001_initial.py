# Generated by Django 4.2.4 on 2025-07-27 05:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mlmodels', '0003_alter_mlmodel_metadata_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PredictionExplanation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('explanation_method', models.CharField(max_length=50)),
                ('explanation_data', models.JSONField()),
                ('explanation_confidence', models.FloatField(null=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='explanations', to='mlmodels.modelprediction')),
            ],
        ),
        migrations.CreateModel(
            name='ModelRetrainingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('training_data_source', models.CharField(max_length=200)),
                ('training_config', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('started_at', models.DateTimeField(null=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('new_model_accuracy', models.FloatField(null=True)),
                ('performance_improvement', models.FloatField(null=True)),
                ('logs', models.TextField(blank=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='retraining_jobs', to='mlmodels.mlmodel')),
                ('triggered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModelPerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('sample_size', models.IntegerField()),
                ('evaluation_date', models.DateTimeField(auto_now_add=True)),
                ('model_version', models.CharField(max_length=50)),
                ('data_version', models.CharField(max_length=50, null=True)),
                ('evaluation_context', models.JSONField(default=dict)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='mlmodels.mlmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MLExperiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('experiment_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('traffic_allocation', models.FloatField(default=50.0, help_text='Percentage of traffic to treatment model')),
                ('target_metric', models.CharField(max_length=100)),
                ('minimum_sample_size', models.IntegerField(default=100)),
                ('confidence_level', models.FloatField(default=95.0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('running', 'Running'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('statistical_significance', models.BooleanField(default=False)),
                ('p_value', models.FloatField(null=True)),
                ('effect_size', models.FloatField(null=True)),
                ('winner', models.CharField(choices=[('control', 'Control'), ('treatment', 'Treatment')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('control_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_experiments', to='mlmodels.mlmodel')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('treatment_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatment_experiments', to='mlmodels.mlmodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeatureImportance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=200)),
                ('importance_score', models.FloatField()),
                ('importance_rank', models.IntegerField()),
                ('method', models.CharField(max_length=50)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('model_version', models.CharField(max_length=50)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_importance', to='mlmodels.mlmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ExperimentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant', models.CharField(choices=[('control', 'Control'), ('treatment', 'Treatment')], max_length=20)),
                ('input_text', models.TextField()),
                ('prediction', models.JSONField()),
                ('confidence_score', models.FloatField()),
                ('response_time', models.FloatField()),
                ('accuracy', models.FloatField(null=True)),
                ('user_feedback', models.IntegerField(null=True)),
                ('session_id', models.UUIDField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(default=dict)),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='ml_experiments.mlexperiment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataDriftDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drift_score', models.FloatField()),
                ('drift_threshold', models.FloatField(default=0.1)),
                ('is_drift_detected', models.BooleanField(default=False)),
                ('drift_type', models.CharField(max_length=50)),
                ('affected_features', models.JSONField(default=list)),
                ('reference_period_start', models.DateTimeField()),
                ('reference_period_end', models.DateTimeField()),
                ('current_period_start', models.DateTimeField()),
                ('current_period_end', models.DateTimeField()),
                ('detection_date', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(default=dict)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drift_detections', to='mlmodels.mlmodel')),
            ],
        ),
    ]

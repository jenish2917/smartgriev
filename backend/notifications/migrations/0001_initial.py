# Generated by Django 4.2.4 on 2025-07-27 05:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PushNotificationDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.CharField(max_length=255, unique=True)),
                ('device_type', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android'), ('web', 'Web Browser')], max_length=20)),
                ('device_name', models.CharField(blank=True, max_length=200)),
                ('app_version', models.CharField(blank=True, max_length=50)),
                ('os_version', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(auto_now=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('notification_type', models.CharField(choices=[('complaint_status', 'Complaint Status Update'), ('department_assignment', 'Department Assignment'), ('resolution_reminder', 'Resolution Reminder'), ('escalation', 'Escalation Alert'), ('system_alert', 'System Alert'), ('marketing', 'Marketing Message'), ('announcement', 'Announcement'), ('feedback_request', 'Feedback Request')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification'), ('whatsapp', 'WhatsApp'), ('webhook', 'Webhook')], max_length=20)),
                ('subject_template', models.CharField(help_text='Subject for email/push notifications', max_length=255)),
                ('body_template', models.TextField(help_text='Use {{variable}} for dynamic content')),
                ('available_variables', models.JSONField(default=list, help_text='List of available template variables')),
                ('html_template', models.TextField(blank=True, help_text='HTML version for email')),
                ('css_styles', models.TextField(blank=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('notification_type', 'channel', 'language')},
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('trigger_event', models.CharField(choices=[('complaint_created', 'Complaint Created'), ('status_changed', 'Status Changed'), ('assignment_changed', 'Assignment Changed'), ('comment_added', 'Comment Added'), ('deadline_approaching', 'Deadline Approaching'), ('escalation_triggered', 'Escalation Triggered'), ('resolution_confirmed', 'Resolution Confirmed'), ('feedback_received', 'Feedback Received')], max_length=50)),
                ('conditions', models.JSONField(default=dict, help_text='Conditions that must be met')),
                ('recipient_type', models.CharField(choices=[('complaint_user', 'Complaint Creator'), ('department_officer', 'Department Officer'), ('all_officers', 'All Officers'), ('admin_users', 'Admin Users'), ('custom', 'Custom Recipients')], max_length=50)),
                ('delay_minutes', models.IntegerField(default=0, help_text='Delay before sending')),
                ('max_frequency_hours', models.IntegerField(default=24, help_text='Minimum hours between same notifications')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_notification_rules', to=settings.AUTH_USER_MODEL)),
                ('custom_recipients', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('html_body', models.TextField(blank=True)),
                ('channel', models.CharField(max_length=20)),
                ('recipient_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('scheduled_at', models.DateTimeField()),
                ('sent_at', models.DateTimeField(null=True)),
                ('provider_message_id', models.CharField(max_length=255, null=True)),
                ('delivery_status', models.CharField(max_length=50, null=True)),
                ('opened_at', models.DateTimeField(null=True)),
                ('clicked_at', models.DateTimeField(null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('context_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationrule')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('whatsapp_enabled', models.BooleanField(default=False)),
                ('complaint_updates', models.BooleanField(default=True)),
                ('system_alerts', models.BooleanField(default=True)),
                ('marketing_messages', models.BooleanField(default=False)),
                ('reminders', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('max_emails_per_day', models.IntegerField(default=10)),
                ('max_sms_per_day', models.IntegerField(default=5)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationDeliveryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.IntegerField()),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('provider_name', models.CharField(max_length=100)),
                ('provider_response', models.JSONField(default=dict)),
                ('success', models.BooleanField()),
                ('error_code', models.CharField(max_length=50, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('response_time_ms', models.IntegerField(null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_logs', to='notifications.notificationqueue')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sent_count', models.IntegerField(default=0)),
                ('delivered_count', models.IntegerField(default=0)),
                ('failed_count', models.IntegerField(default=0)),
                ('opened_count', models.IntegerField(default=0)),
                ('clicked_count', models.IntegerField(default=0)),
                ('unsubscribed_count', models.IntegerField(default=0)),
                ('avg_delivery_time_seconds', models.FloatField(null=True)),
                ('bounce_rate', models.FloatField(null=True)),
                ('delivery_rate', models.FloatField(null=True)),
                ('open_rate', models.FloatField(null=True)),
                ('click_rate', models.FloatField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='notifications.notificationtemplate')),
            ],
        ),
    ]
